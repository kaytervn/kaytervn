const fs = require("fs");

const accountIds = [
  8313653263695872, 8320740878581760, 8340623243018240, 8340623268478976,
  8340623292366848, 8340623315599360, 8340623342403584, 8340623382085632,
  8340623409840128, 8340623438053376, 8340623473246208, 8340623495036928,
  8340623523217408, 8340623553691648, 8340623575252992, 8340623595995136,
  8340623616966656, 8340623647571968, 8340623681912832, 8340623704227840,
  8340623736209408, 8340623760031744, 8340623786475520, 8340623821406208,
  8340623848865792, 8340623874719744,
];

const keyInformationGroupIds = [
  8321790129143808, 8321791509430272, 8328055456366592, 8329334069559296,
  8340759516872704, 8340759523655680, 8340759529914368, 8340759537876992,
  8340759553376256, 8340759560192000, 8340759567269888, 8340759573397504,
  8340759580442624, 8340759587684352, 8340759594205184, 8340759600791552,
  8340759607934976, 8340759617110016, 8340759623761920, 8340759630544896,
  8340759636770816, 8340759643914240, 8340759650500608, 8340759657709568,
  8340759677009920, 8340759689166848, 8340759706337280, 8340759730913280,
  8340759738351616, 8340759746674688, 8340759753883648, 8340759761027072,
  8340759767547904, 8340759774232576, 8340759780851712, 8340759787700224,
  8340759797006336, 8340759805231104, 8340759813423104, 8340759820402688,
  8340759826366464, 8340759832788992, 8340759838425088, 8340759844585472,
  8340759851728896, 8340759858806784, 8340759865851904, 8340759874600960,
  8340759882137600, 8340759888691200, 8340759897079808, 8340759903764480,
  8340759909990400, 8340759916380160, 8340759923294208, 8340759930044416,
  8340759936172032, 8340759945052160, 8340759953145856, 8340759959961600,
  8340759966646272, 8340759975395328, 8340759983063040,
];

function shuffleArray(arr) {
  return arr
    .map((value) => ({ value, sort: Math.random() }))
    .sort((a, b) => a.sort - b.sort)
    .map(({ value }) => value);
}

function generateAccountGroupPairs(accountIds, groupIds, ratio = 0.7) {
  const result = [];

  accountIds.forEach((accountId) => {
    const shuffled = shuffleArray(groupIds);
    const groupCount = Math.floor(groupIds.length * ratio);
    const selected = shuffled.slice(0, groupCount);

    selected.forEach((groupId) => {
      result.push({ accountId, keyInformationGroupId: groupId });
    });
  });

  return result;
}

function jsonToCsv(data) {
  const headers = Object.keys(data[0]);
  const rows = data.map((row) =>
    headers.map((header) => `"${row[header]}"`).join(",")
  );
  return [headers.join(","), ...rows].join("\n");
}

function saveToCsv(fileName, data) {
  const csvContent = jsonToCsv(data);
  fs.writeFileSync(fileName, csvContent, "utf8");
  console.log(`File CSV đã được tạo: ${fileName}`);
}

const pairs = generateAccountGroupPairs(
  accountIds,
  keyInformationGroupIds,
  0.7
);
const timestamp = new Date().toISOString().replace(/[-T:.Z]/g, "");
const fileName = `key_permission_${timestamp}.csv`;
saveToCsv(fileName, pairs);
