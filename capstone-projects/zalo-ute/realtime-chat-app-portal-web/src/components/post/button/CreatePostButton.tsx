import React, { useState } from 'react';
import { Image, SmileIcon, X } from 'lucide-react';

const CreatePostButton = ({
  onCreatePost,
  avatarUrl = "/api/placeholder/32/32",
  displayName,
}: any) => {
  const [isEmotionPopupOpen, setIsEmotionPopupOpen] = useState(false);

  // Danh s√°ch c·∫£m x√∫c v√† bi·ªÉu t∆∞·ª£ng
  const emotionsWithIcons = [
    { emotion: "Vui v·∫ª", icon: "üòä" },
    { emotion: "Bu·ªìn", icon: "üò¢" },
    { emotion: "H·∫°nh ph√∫c", icon: "üòÅ" },
    { emotion: "H√†o h·ª©ng", icon: "ü§©" },
    { emotion: "Tuy·ªát v·ªùi", icon: "üëç" },
    { emotion: "Bi·∫øt ∆°n", icon: "üôè" },
    { emotion: "ƒê∆∞·ª£c y√™u", icon: "‚ù§Ô∏è" },
    { emotion: "Gi·∫≠n d·ªØ", icon: "üò°" },
    { emotion: "M·ªát m·ªèi", icon: "üò¥" },
    { emotion: "Th∆∞ gi√£n", icon: "üòå" },
    { emotion: "Lo l·∫Øng", icon: "üòü" },
    { emotion: "ƒê√°ng y√™u", icon: "üòç" },
  ];

  const toggleEmotionPopup = () => {
    setIsEmotionPopupOpen(!isEmotionPopupOpen);
  };

  const handleEmotionSelect = (emotion: any) => {
    setIsEmotionPopupOpen(false); // ƒê√≥ng popup c·∫£m x√∫c
    onCreatePost(emotion); // G·ªçi h√†m m·ªü CreatePost v√† truy·ªÅn c·∫£m x√∫c
  };

  return (
    <div className="w-full bg-white shadow-sm rounded-lg mb-4">
      <div className="p-4">
        {/* Input area */}
        <div className="flex items-center gap-2 mb-3">
          <img
            src={avatarUrl}
            alt="User avatar"
            className="w-10 h-10 rounded-full"
          />
          <button
            className="w-full h-10 px-4 text-left text-gray-500 bg-gray-100 hover:bg-gray-200 rounded-full"
            onClick={() => onCreatePost(null)} // M·ªü CreatePost v·ªõi n·ªôi dung tr·ªëng
          >
            {displayName} ∆°i, B·∫°n ƒëang nghƒ© g√¨ th·∫ø?
          </button>
        </div>

        {/* Action buttons */}
        <div className="flex gap-1 pt-2 border-t">
          <button
            className="flex-1 flex items-center justify-center py-2 text-gray-600 hover:bg-gray-100 rounded-lg"
            onClick={() => onCreatePost(null)} // M·ªü CreatePost v·ªõi n·ªôi dung tr·ªëng
          >
            <Image className="w-5 h-5 mr-2" />
            ·∫¢nh/video
          </button>

          <button
            className="flex-1 flex items-center justify-center py-2 text-gray-600 hover:bg-gray-100 rounded-lg"
            onClick={toggleEmotionPopup} // M·ªü popup c·∫£m x√∫c
          >
            <SmileIcon className="w-5 h-5 mr-2" />
            C·∫£m x√∫c/ho·∫°t ƒë·ªông
          </button>
        </div>
      </div>

      {/* Popup C·∫£m x√∫c/Ho·∫°t ƒë·ªông */}
      {isEmotionPopupOpen && (
        <div className="fixed inset-0 flex items-center justify-center bg-black bg-opacity-50 z-50">
          <div className="bg-white w-96 p-4 rounded-lg shadow-lg relative">
            <button
              className="absolute top-2 right-2 text-gray-500 hover:text-gray-700"
              onClick={toggleEmotionPopup}
            >
              <X size={20} />
            </button>
            <h2 className="text-xl font-bold mb-4">B·∫°n ƒëang c·∫£m th·∫•y th·∫ø n√†o?</h2>

            <div className="grid grid-cols-2 gap-3">
              {emotionsWithIcons.map((item, index) => (
                <button
                  key={index}
                  className="flex items-center gap-2 px-3 py-2 border rounded-lg text-gray-600 hover:bg-gray-100 transition"
                  onClick={() => handleEmotionSelect(item)} // G·ªçi h√†m x·ª≠ l√Ω ch·ªçn c·∫£m x√∫c
                >
                  <span className="text-2xl">{item.icon}</span> {/* Icon c·∫£m x√∫c */}
                  {item.emotion}
                </button>
              ))}
            </div>
          </div>
        </div>
      )}
    </div>
  );
};

export default CreatePostButton;
